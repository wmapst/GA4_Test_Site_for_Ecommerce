version: '3.3'

services:
  node_db:
    image: mysql:5.7
    # platform: linux/x86_64
    container_name: node_db
    restart: always
    ports:
       - "3306:3306"
    volumes:
       - ./mysql/data:/var/lib/mysql
       - ./mysql/conf/my.cnf:/etc/mysql/my.cnf
       - ./mysql/init:/docker-entrypoint-initdb.d
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: ga4_test
      MYSQL_USER: user
      MYSQL_PASSWORD: user
      TZ: 'Asia/Tokyo'
    networks: 
      app_net: 
        ipv4_address: '172.18.0.2'

  node_web:
    build: .
    image: node:16.13.2
    container_name: node_web
    restart: always
    ports:
       - "3000:3000"
    depends_on:
       - node_db
    volumes:
       - ../src:/home/app
    environment:
      TZ: 'Asia/Tokyo'
      HOST: '0.0.0.0'
      CHOKIDAR_USEPOLLING: 'true'
    command: > 
      bash -c "
      cd /home/app && 
      npm install && 
      npm run build && 
      npm run start
      "
    networks:
      app_net: 
        ipv4_address: '172.18.0.4'

  reverse-proxy:
    image: nginx
    volumes:
      - ./reverse-proxy/nginx.conf:/etc/nginx/nginx.conf
    ports:
      - 80:80
    container_name: node_http
    depends_on:
       - node_web
    networks:
      app_net: 
        ipv4_address: '172.18.0.3'

networks:
  app_net: 
    driver: bridge
    ipam: 
      driver: default
      config:
       - subnet: '172.18.0.0/16'

